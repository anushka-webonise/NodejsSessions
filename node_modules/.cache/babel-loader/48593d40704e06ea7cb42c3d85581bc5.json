{"ast":null,"code":"import { useContext } from 'react';\nimport { ReactReduxContext } from '../components/Context';\nimport { useReduxContext as useDefaultReduxContext } from './useReduxContext';\n/**\r\n * Hook factory, which creates a `useStore` hook bound to a given context.\r\n *\r\n * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.\r\n * @returns {Function} A `useStore` hook bound to the specified context.\r\n */\n\nexport function createStoreHook(context) {\n  var _s = $RefreshSig$(),\n      _s2 = $RefreshSig$();\n\n  if (context === void 0) {\n    context = ReactReduxContext;\n  }\n\n  var useReduxContext = context === ReactReduxContext ? useDefaultReduxContext : _s(function () {\n    _s();\n\n    return useContext(context);\n  }, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n  return _s2(function useStore() {\n    _s2();\n\n    var _useReduxContext = useReduxContext(),\n        store = _useReduxContext.store;\n\n    return store;\n  }, \"WaKMueXUGroj9iZ4iRdD8/X8Qug=\", false, function () {\n    return [useReduxContext];\n  });\n}\n/**\r\n * A hook to access the redux store.\r\n *\r\n * @returns {any} the redux store\r\n *\r\n * @example\r\n *\r\n * import React from 'react'\r\n * import { useStore } from 'react-redux'\r\n *\r\n * export const ExampleComponent = () => {\r\n *   const store = useStore()\r\n *   return <div>{store.getState()}</div>\r\n * }\r\n */\n\nexport var useStore = /*#__PURE__*/createStoreHook();","map":{"version":3,"sources":["/home/react/Blookers-Blogging-Website/src/login2/node_modules/react-redux/es/hooks/useStore.js"],"names":["useContext","ReactReduxContext","useReduxContext","useDefaultReduxContext","createStoreHook","context","useStore","_useReduxContext","store"],"mappings":"AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,iBAAT,QAAkC,uBAAlC;AACA,SAASC,eAAe,IAAIC,sBAA5B,QAA0D,mBAA1D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,eAAT,CAAyBC,OAAzB,EAAkC;AAAA;AAAA;;AACvC,MAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;AACtBA,IAAAA,OAAO,GAAGJ,iBAAV;AACD;;AAED,MAAIC,eAAe,GAAGG,OAAO,KAAKJ,iBAAZ,GAAgCE,sBAAhC,MAAyD,YAAY;AAAA;;AACzF,WAAOH,UAAU,CAACK,OAAD,CAAjB;AACD,GAFqB,iCAAtB;AAGA,aAAO,SAASC,QAAT,GAAoB;AAAA;;AACzB,QAAIC,gBAAgB,GAAGL,eAAe,EAAtC;AAAA,QACIM,KAAK,GAAGD,gBAAgB,CAACC,KAD7B;;AAGA,WAAOA,KAAP;AACD,GALD;AAAA,YACyBN,eADzB;AAAA;AAMD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAII,QAAQ,GAAG,aAAaF,eAAe,EAA3C","sourcesContent":["import { useContext } from 'react';\nimport { ReactReduxContext } from '../components/Context';\nimport { useReduxContext as useDefaultReduxContext } from './useReduxContext';\n/**\r\n * Hook factory, which creates a `useStore` hook bound to a given context.\r\n *\r\n * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.\r\n * @returns {Function} A `useStore` hook bound to the specified context.\r\n */\n\nexport function createStoreHook(context) {\n  if (context === void 0) {\n    context = ReactReduxContext;\n  }\n\n  var useReduxContext = context === ReactReduxContext ? useDefaultReduxContext : function () {\n    return useContext(context);\n  };\n  return function useStore() {\n    var _useReduxContext = useReduxContext(),\n        store = _useReduxContext.store;\n\n    return store;\n  };\n}\n/**\r\n * A hook to access the redux store.\r\n *\r\n * @returns {any} the redux store\r\n *\r\n * @example\r\n *\r\n * import React from 'react'\r\n * import { useStore } from 'react-redux'\r\n *\r\n * export const ExampleComponent = () => {\r\n *   const store = useStore()\r\n *   return <div>{store.getState()}</div>\r\n * }\r\n */\n\nexport var useStore = /*#__PURE__*/createStoreHook();"]},"metadata":{},"sourceType":"module"}